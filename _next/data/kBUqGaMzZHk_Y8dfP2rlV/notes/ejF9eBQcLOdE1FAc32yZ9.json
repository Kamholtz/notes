{"pageProps":{"note":{"id":"ejF9eBQcLOdE1FAc32yZ9","title":"Treesitter","desc":"","updated":1646550522710,"created":1641381690086,"custom":{},"fname":"vim.plugins.treesitter","type":"note","vault":{"fsPath":"vault"},"contentHash":"b1b1b570d217de8d3327dcea703c4466","links":[{"type":"wiki","from":{"fname":"vim.plugins.treesitter","id":"ejF9eBQcLOdE1FAc32yZ9","vaultName":"vault"},"value":"vim.plugins.telescope","alias":"vim.plugins.telescope","position":{"start":{"line":6,"column":13,"offset":26},"end":{"line":6,"column":38,"offset":51},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"vim.plugins.telescope"}},{"type":"ref","from":{"fname":"vim.plugins.treesitter","id":"ejF9eBQcLOdE1FAc32yZ9","vaultName":"vault"},"value":"vim.filetypes","position":{"start":{"line":33,"column":1,"offset":940},"end":{"line":33,"column":115,"offset":1054},"indent":[]},"xvault":false,"to":{"fname":"vim.filetypes","anchorHeader":"vim-recognising-header-files-as-c-instead-of-c"}}],"anchors":{"errors":{"type":"header","text":"Errors","value":"errors","line":9,"column":0,"depth":2},"troubleshooting":{"type":"header","text":"Troubleshooting","value":"troubleshooting","line":20,"column":0,"depth":2},"cheahealth":{"type":"header","text":"Cheahealth","value":"cheahealth","line":22,"column":0,"depth":3},"get-parser-paths":{"type":"header","text":"Get Parser Paths","value":"get-parser-paths","line":26,"column":0,"depth":3},"query-error-invalid-node-type-at-position":{"type":"header","text":"query error: invalid node type at position","value":"query-error-invalid-node-type-at-position","line":31,"column":0,"depth":2}},"children":[],"parent":"xipPzfq2l1PQQOIZllYav","data":{}},"body":"<h1 id=\"treesitter\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#treesitter\"></a>Treesitter</h1>\n<h2 id=\"errors\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#errors\"></a>Errors</h2>\n<p>In use with <a href=\"/notes/notes/N2y2B01sEn8RCAOIRckoW\">Telescope</a></p>\n<p><code>Telescope treesitter</code></p>\n<pre><code>[telescope] [WARN  21:20:56] ...ck\\packer\\start\\telescope.nvim/lua/telescope/pickers.lua:467: Finder failed with msg:  ...ck\\packer\\start\\telescope.nvim/lua/telescope/sorters.lua:596: table index is nil\n</code></pre>\n<h2 id=\"troubleshooting\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#troubleshooting\"></a>Troubleshooting</h2>\n<h3 id=\"cheahealth\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#cheahealth\"></a>Cheahealth</h3>\n<p><code>:checkheath nvim_treesitter</code></p>\n<h3 id=\"get-parser-paths\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#get-parser-paths\"></a>Get Parser Paths</h3>\n<p><code>:echo nvim_get_runtime_file('parser', v:true)</code></p>\n<h2 id=\"query-error-invalid-node-type-at-position\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#query-error-invalid-node-type-at-position\"></a>query error: invalid node type at position</h2>\n<p><a href=\"https://github.com/nvim-treesitter/nvim-treesitter#i-get-query-error-invalid-node-type-at-position\">GitHub - nvim-treesitter/nvim-treesitter: Nvim Treesitter configurations and abstraction layer</a></p>\n<blockquote>\n<p>query error: invalid node type at position</p>\n</blockquote>\n<p>I was seeing this error in header files within a C project. Using <code>:set filetype?</code> indicated that the the file was being recognised as C++ instead of C. This is remedied by configuring filetype detection as <code>c.doxygen</code>:</p>\n<p></p><p></p><div class=\"portal-container\">\n<div class=\"portal-head\">\n<div class=\"portal-backlink\">\n<div class=\"portal-title\">From <span class=\"portal-text-title\">Filetypes</span></div>\n<a href=\"/notes/notes/yf8d4qvk9xuqytu2nb2eh5y\" class=\"portal-arrow\">Go to text <span class=\"right-arrow\">â†’</span></a>\n</div>\n</div>\n<div id=\"portal-parent-anchor\" class=\"portal-parent\" markdown=\"1\">\n<div class=\"portal-parent-fader-top\"></div>\n<div class=\"portal-parent-fader-bottom\"></div><h3 id=\"vim-recognising-header-files-as-c-instead-of-c\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#vim-recognising-header-files-as-c-instead-of-c\"></a>Vim recognising header files as C++ instead of C</h3>\n<p><a href=\"https://www.reddit.com/r/neovim/comments/orfpcd/question_does_the_c_parser_from_nvimtreesitter/\">r/neovim - [Question] Does the C parser from nvim-treesitter parse header files?</a></p>\n<blockquote>\n<p>Check whether Neovim is setting the filetype to cpp instead of c.</p>\n<p>If it's setting it to cpp you probably want to write let <code>g:c_syntax_for_h = 1</code> in your config. See :help c.vim.</p>\n</blockquote>\n<h3 id=\"filetype-detection-for-h-files-as-c-with-doxygen\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#filetype-detection-for-h-files-as-c-with-doxygen\"></a>Filetype detection for .h files as C with Doxygen</h3>\n<p>Useful points from <a href=\"https://www.alexeyshmalko.com/2014/using-vim-as-c-cpp-ide/\">Using Vim as C/C++ IDE</a></p>\n<ul>\n<li>Filetype detection:</li>\n</ul>\n<pre class=\"language-vim\"><code class=\"language-vim\">augroup project\n  <span class=\"token builtin\">autocmd</span><span class=\"token operator\">!</span>\n  <span class=\"token builtin\">autocmd</span> BufRead<span class=\"token punctuation\">,</span>BufNewFile <span class=\"token operator\">*</span><span class=\"token operator\">.</span><span class=\"token keyword\">h</span><span class=\"token punctuation\">,</span><span class=\"token operator\">*</span><span class=\"token operator\">.</span><span class=\"token keyword\">c</span> <span class=\"token keyword\">set</span> <span class=\"token keyword\">filetype</span><span class=\"token operator\">=</span><span class=\"token keyword\">c</span><span class=\"token operator\">.</span>doxygen\naugroup END\n</code></pre>\n<ul>\n<li>This will trigger for ALL <code>.h</code> files. There is likely a way to set this on a per project basis with a per project config. I have not investigated this yet.</li>\n</ul></div></div><p></p><p></p>\n<p>I was still receiving the same <code>invalid node type</code> error from a <code>cpp</code> parser despite the <code>:set filetype?</code> now returning <code>c.doxygen</code>. Uninstalling the <code>cpp</code> parser was the (immediate) solution to this problem.</p>\n<ul>\n<li><code>:TSUninstall cpp</code> is meant to do this, but the <code>cpp parser</code> remained active</li>\n<li>I found I had to remove <code>cpp.so</code> from <code>C:\\Users\\{user}\\AppData\\Local\\nvim-data\\site\\pack\\packer\\start\\nvim-treesitter\\parser</code> manually.</li>\n</ul>","noteIndex":{"id":"wn8PE1RhG0znK1alrGFYv","title":"Welcome","desc":"","updated":1647739693733,"created":1631901573363,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"25f6a870234e6662373e3b363ac6e7ff","links":[],"anchors":{},"children":["9nbHM9DXYJiw0wOL5EHqu","49nbdlbyhuggwhb17c4ckrc","etnjoq40t5e9gp3i9i0ebg4","SEWMNyq5ejB4Uu2o5gD1F","30970790-4080-4f49-a9e6-d3ea9f8a2f5e","oGtULAvsKCL7IqVaNh9x5","kxlbgahdm89suj3rh234zd2","haa2RJrh1FmtvgDrCgMuO","sHUgvR09969GI1KByYETE","6y2lfHzDgTsk4Jrl7vL24","D6TMhnzbxXgM6H69SHyDd","9itq04txzxzb62nmstlovti","4nqbPU2WajRDXAXqSDnwo","5acd228c-faa2-4c6c-8fed-6abd55a1e819","2pquOIrwpkRIflevQW2UU","fe3d08bb-d6f0-4d4b-9a4d-3eae285c8f70","phaz4bx38xr32daxmt0npt5","b0k4g697aehphlpejqdd6hm","jriu7nrk5w8o38yu17adio4","g7ydg6006fa1pyg4364yi0q"],"parent":null,"data":{},"body":"\nThese are my public notes!\n\n> This website is generated by a Dendron template. For more information, see the [template README file](https://github.com/dendronhq/template.publish.github-action/).\n\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{},"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableUserTags":true,"enableHashTags":true,"dendronVersion":"0.86.1","enableEditorDecorations":true,"enableHandlebarTemplates":true,"enableFullHierarchyNoteTitle":false,"enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"assetsPrefix":"/notes","copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://kamholtz.github.io","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"writeStubs":false,"seo":{"title":"whomst'd've","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enablePrettyLinks":true,"enableTaskNotes":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}
{"pageProps":{"note":{"id":"1Kag9iDQD0sVnvP4NTrLi","title":"Clangd","desc":"","updated":1640319868672,"created":1640318188003,"custom":{},"fname":"vim.plugins.coc.clangd","type":"note","vault":{"fsPath":"vault"},"contentHash":"e2920514745f7013a1560ab1bb7de4db","links":[{"type":"ref","from":{"fname":"vim.plugins.coc.clangd","id":"1Kag9iDQD0sVnvP4NTrLi","vaultName":"vault"},"value":"platformio.run.targets","position":{"start":{"line":30,"column":1,"offset":966},"end":{"line":30,"column":97,"offset":1062},"indent":[]},"xvault":false,"to":{"fname":"platformio.run.targets","anchorHeader":"settings-targets-in-platformioini"}},{"from":{"fname":"ee.nrf-connect-sdk.zb","vaultName":"vault"},"type":"backlink","position":{"start":{"line":40,"column":13,"offset":1845},"end":{"line":40,"column":100,"offset":1932},"indent":[]},"value":"vim.plugins.coc.clangd","alias":"Creating compile_commands.json"}],"anchors":{"prerequisites":{"type":"header","text":"Prerequisites","value":"prerequisites","line":9,"column":0,"depth":2},"creating-compile_commandsjson":{"type":"header","text":"Creating compile_commands.json","value":"creating-compile_commandsjson","line":18,"column":0,"depth":2},"detecting-compile_commandsjson-with-clangd":{"type":"header","text":"Detecting compile_commands.json with clangd","value":"detecting-compile_commandsjson-with-clangd","line":62,"column":0,"depth":2},"per-file-compilation-database":{"type":"header","text":"Per-file compilation database","value":"per-file-compilation-database","line":88,"column":0,"depth":2}},"children":[],"parent":"Vp6KhJahXsNNsM0pdfZm4","data":{}},"body":"<h1 id=\"clangd\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#clangd\"></a>Clangd</h1>\n<h2 id=\"prerequisites\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#prerequisites\"></a>Prerequisites</h2>\n<p>Install clangd which is in llvm:</p>\n<p><a href=\"https://llvm.org/\">The LLVM Compiler Infrastructure Project</a></p>\n<ul>\n<li>Successfully using v13.0.0 on Windows (though not all definitions can be found in the project I was testing with...)</li>\n<li>Make sure it is added to path during installation</li>\n</ul>\n<h2 id=\"creating-compile_commandsjson\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#creating-compile_commandsjson\"></a>Creating compile_commands.json</h2>\n<p>The following is taken from my own comments on this gist:</p>\n<p><a href=\"https://gist.github.com/neta540/9e65261be52d6cd4d6c17399b78d34bb\">PlatformIO-vim.md</a></p>\n<p>Clangd require a compilation database<a href=\"https://clangd.llvm.org/config#compilationdatabase\">Configuration</a>.</p>\n<p>I am guessing everyone here has likely moved to ccls. I personally could not get ccls working on windows. I found that you can get platformio to generate a <code>compile_commands.json</code> file for you using the following command:</p>\n<pre class=\"language-batch\"><code class=\"language-batch\"><span class=\"token command\"><span class=\"token keyword\">pio</span> run <span class=\"token parameter attr-name\">-t</span> compiledb</span>\n</code></pre>\n<p>This uses the target param <code>-t</code> to create the <code>compile_commands.json</code>. Could possibly specify the target in <code>platform.ini</code> file</p>\n<p></p><p></p><div class=\"portal-container\">\n<div class=\"portal-head\">\n<div class=\"portal-backlink\">\n<div class=\"portal-title\">From <span class=\"portal-text-title\">Targets</span></div>\n<a href=\"/notes/notes/CI0VR2ZzHRTz7VEpyqPH7\" class=\"portal-arrow\">Go to text <span class=\"right-arrow\">→</span></a>\n</div>\n</div>\n<div id=\"portal-parent-anchor\" class=\"portal-parent\" markdown=\"1\">\n<div class=\"portal-parent-fader-top\"></div>\n<div class=\"portal-parent-fader-bottom\"></div><h2 id=\"settings-targets-in-platformioini\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#settings-targets-in-platformioini\"></a>Settings targets in platformio.ini</h2>\n<pre class=\"language-ini\"><code class=\"language-ini\"><span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">env:upload_and_monitor</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">targets</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">upload, monitor</span>\n</code></pre></div></div><p></p><p></p>\n<p>By default the <code>compile_commands.json</code> file ends up in a directory that clangd will not detect. In my case it was <code>/.pio/build/nodemcuv2</code>. There is a <code>:CocConfig</code> param for clangd called <code>compilationDatabasePath</code> but that did not seem to work for me (config found here: <a href=\"https://github.com/clangd/coc-clangd#configurations\">GitHub - clangd/coc-clangd: clangd extension for coc.nvim</a>), so I used the work around detailed in <a href=\"https://docs.platformio.org/en/latest/integration/compile_commands.html\">Compilation database compile_commands.json — PlatformIO latest documentation</a> which uses a python script to change the where the <code>compile_commands.json</code> is created.</p>\n<p><code>platformio.ini:</code></p>\n<pre class=\"language-ini\"><code class=\"language-ini\"><span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">env:myenv</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">platform</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">...</span>\n<span class=\"token key attr-name\">board</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">...</span>\n<span class=\"token key attr-name\">extra_scripts</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">post:extra_script.py</span>\n</code></pre>\n<p><code>extra_script.py:</code></p>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\nImport<span class=\"token punctuation\">(</span><span class=\"token string\">\"env\"</span><span class=\"token punctuation\">)</span>\n\nenv<span class=\"token punctuation\">.</span>Replace<span class=\"token punctuation\">(</span>COMPILATIONDB_PATH<span class=\"token operator\">=</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token string\">\"$PROJECT_DIR\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"compile_commands.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<p><del>There is also a <code>--compile-commands-dir</code> option for <code>clangd</code> which might be worth investigating.</del></p>\n<h2 id=\"detecting-compile_commandsjson-with-clangd\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#detecting-compile_commandsjson-with-clangd\"></a>Detecting compile_commands.json with clangd</h2>\n<p><a href=\"https://github.com/clangd/coc-clangd/issues/77\">Would coc-clangd find compilation database under current directory or parent path ? · Issue #77 · clangd/coc-clangd</a></p>\n<p>I can now confirm that the following <code>:CocLocalConfg</code> will detect the <code>compile_commands.json</code> file in the specified directory using <code>clangd.args</code> and <code>--compile-commands-dir</code>:</p>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"languageserver\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"clangd\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"command\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"clangd\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"--background-index\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"--compile-commands-dir\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\".pio/build/nodemcuv2\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"rootPatterns\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"compile_flags.txt\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"compile_commands.json\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\".vim/\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\".git/\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\".hg/\"</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"filetypes\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"c\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cpp\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"objc\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"objcpp\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2 id=\"per-file-compilation-database\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#per-file-compilation-database\"></a>Per-file compilation database</h2>\n<p><a href=\"https://github.com/clangd/coc-clangd/issues/182\">Add the possibility to specify per-file compilation database path · Issue #182 · clangd/coc-clangd</a></p>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/notes/notes/oMZ0UCDQcTWH0WcIN0Dpc\">ZigBee</a></li>\n</ul>","noteIndex":{"id":"wn8PE1RhG0znK1alrGFYv","title":"Welcome","desc":"","updated":1647739693733,"created":1631901573363,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"25f6a870234e6662373e3b363ac6e7ff","links":[],"anchors":{},"children":["9nbHM9DXYJiw0wOL5EHqu","49nbdlbyhuggwhb17c4ckrc","etnjoq40t5e9gp3i9i0ebg4","SEWMNyq5ejB4Uu2o5gD1F","30970790-4080-4f49-a9e6-d3ea9f8a2f5e","oGtULAvsKCL7IqVaNh9x5","kxlbgahdm89suj3rh234zd2","haa2RJrh1FmtvgDrCgMuO","sHUgvR09969GI1KByYETE","6y2lfHzDgTsk4Jrl7vL24","D6TMhnzbxXgM6H69SHyDd","9itq04txzxzb62nmstlovti","4nqbPU2WajRDXAXqSDnwo","5acd228c-faa2-4c6c-8fed-6abd55a1e819","2pquOIrwpkRIflevQW2UU","fe3d08bb-d6f0-4d4b-9a4d-3eae285c8f70","phaz4bx38xr32daxmt0npt5","b0k4g697aehphlpejqdd6hm","jriu7nrk5w8o38yu17adio4","g7ydg6006fa1pyg4364yi0q"],"parent":null,"data":{},"body":"\nThese are my public notes!\n\n> This website is generated by a Dendron template. For more information, see the [template README file](https://github.com/dendronhq/template.publish.github-action/).\n\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{},"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableUserTags":true,"enableHashTags":true,"dendronVersion":"0.86.1","enableEditorDecorations":true,"enableHandlebarTemplates":true,"enableFullHierarchyNoteTitle":false,"enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"assetsPrefix":"/notes","copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://kamholtz.github.io","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"writeStubs":false,"seo":{"title":"whomst'd've","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enablePrettyLinks":true,"enableTaskNotes":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}